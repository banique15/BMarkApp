---
import MainLayout from '../layouts/MainLayout.astro';
import { supabase } from '../utils/supabase';

// Fetch benchmark history from Supabase
const { data: prompts, error } = await supabase
  .from('prompts')
  .select(`
    id,
    text,
    created_at,
    responses(id, model_id, response_text, response_time_ms, models:model_id(name, provider)),
    consensus_groups(id, group_name, count, color)
  `)
  .order('created_at', { ascending: false })
  .limit(10);

// Process data for display
const benchmarks = prompts?.map(prompt => {
  // Count unique models
  const uniqueModels = new Set(prompt.responses.map(r => r.model_id));
  const modelCount = uniqueModels.size;
  
  // Get top consensus group
  const topGroup = prompt.consensus_groups.sort((a, b) => b.count - a.count)[0];
  const totalResponses = prompt.responses.length;
  const consensusPercentage = topGroup ? Math.round((topGroup.count / totalResponses) * 100) : 0;
  
  // Format date
  const date = new Date(prompt.created_at);
  const formattedDate = date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
  
  return {
    id: prompt.id,
    text: prompt.text,
    date: formattedDate,
    modelCount,
    consensusGroups: prompt.consensus_groups.map(group => ({
      name: group.group_name,
      count: group.count,
      percentage: Math.round((group.count / totalResponses) * 100),
      color: group.color
    }))
  };
}) || [];
---

<MainLayout title="Benchmark History">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="flex justify-between items-center mb-8">
      <h1 class="text-3xl font-bold text-gray-900">Benchmark History</h1>
      <a href="/" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
        New Benchmark
      </a>
    </div>
    
    <div class="bg-white shadow rounded-lg overflow-hidden">
      <div class="p-6 border-b border-gray-200">
        <h2 class="text-xl font-semibold">Past Benchmarks</h2>
        <p class="text-gray-600 mt-1">View and compare results from previous benchmark runs.</p>
      </div>
      
      {error && (
        <div class="p-6 bg-red-50 border-b border-red-200 text-red-700">
          <p>Error loading benchmark history: {error.message}</p>
        </div>
      )}
      
      {benchmarks.length === 0 && !error && (
        <div class="p-12 text-center">
          <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">No benchmarks found</h3>
          <p class="mt-1 text-sm text-gray-500">Run your first benchmark to see results here.</p>
          <div class="mt-6">
            <a href="/" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              Start a Benchmark
            </a>
          </div>
        </div>
      )}
      
      {benchmarks.length > 0 && (
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Prompt
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Date
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Models
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Consensus
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Actions
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              {benchmarks.map(benchmark => (
                <tr>
                  <td class="px-6 py-4">
                    <div class="text-sm font-medium text-gray-900 truncate max-w-xs">{benchmark.text}</div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-500">{benchmark.date}</div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-500">{benchmark.modelCount} models</div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex flex-wrap gap-2">
                      {benchmark.consensusGroups.slice(0, 2).map(group => (
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full" 
                              style={`background-color: ${group.color}20; color: ${group.color}`}>
                          {group.name} ({group.percentage}%)
                        </span>
                      ))}
                      {benchmark.consensusGroups.length > 2 && (
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                          +{benchmark.consensusGroups.length - 2} more
                        </span>
                      )}
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    <a href={`/details/${benchmark.id}`} class="text-blue-600 hover:text-blue-900">View Details</a>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
      
      {benchmarks.length > 0 && (
        <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
          <div class="flex justify-between items-center">
            <div class="text-sm text-gray-500">
              Showing {benchmarks.length} of {benchmarks.length} results
            </div>
            <div class="flex space-x-2">
              <button class="px-3 py-1 border border-gray-300 rounded-md text-sm text-gray-700 bg-white disabled:opacity-50" disabled>
                Previous
              </button>
              <button class="px-3 py-1 border border-gray-300 rounded-md text-sm text-gray-700 bg-white disabled:opacity-50" disabled>
                Next
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  </div>
</MainLayout>

<script>
  // No client-side JavaScript needed as we're using server-side rendering
  // and direct links to the details pages
</script>